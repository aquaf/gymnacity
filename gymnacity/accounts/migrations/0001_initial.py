# Generated by Django 3.0.2 on 2020-01-26 09:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exercises', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('date_joined', models.DateField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='Город')),
                ('user_type', models.CharField(choices=[('SPORTSMAN', 'Спортсмен'), ('TRAINER', 'Тренер'), ('GYM', 'Тренажерный зал')], default='SPORTSMAN', max_length=9, verbose_name='Тип пользователя')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Сотрудник')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Аккаунт',
                'verbose_name_plural': 'Аккаунты',
            },
        ),
        migrations.CreateModel(
            name='Gym',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт')),
                ('name', models.CharField(default='Gym', max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Телефон')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Адрес')),
                ('site', models.CharField(blank=True, max_length=100, verbose_name='Сайт')),
            ],
            options={
                'verbose_name': 'Тренажерный зал',
                'verbose_name_plural': 'Тренажерные залы',
            },
        ),
        migrations.CreateModel(
            name='Sportsman',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт')),
                ('name', models.CharField(default='Sportsman', max_length=50, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=50, verbose_name='Фамилия')),
                ('description', models.TextField(blank=True, verbose_name='О себе')),
                ('height', models.PositiveSmallIntegerField(blank=True, verbose_name='Рост (см)')),
                ('weight', models.FloatField(blank=True, verbose_name='Вес (кг)')),
                ('age', models.PositiveSmallIntegerField(blank=True, verbose_name='Возраст')),
                ('photo', models.ImageField(default='media/muscules/0_i-1.jpg', upload_to='media/sportsmans/photo', verbose_name='Фото')),
                ('goal', models.CharField(choices=[('LW', 'Похудение'), ('MG', 'Набор мышечной массы'), ('MR', 'Сжигание жира(рельеф)'), ('PG', 'Увеличение силы'), ('ST', 'Выносливость'), ('KF', 'Поддержание формы')], default='MG', max_length=2, verbose_name='Цель')),
                ('exercises', models.ManyToManyField(blank=True, to='exercises.Exercise', verbose_name='Упражнения')),
                ('gym', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='accounts.Gym', verbose_name='Тренажерный зал')),
            ],
            options={
                'verbose_name': 'Спортсмен',
                'verbose_name_plural': 'Спортсмены',
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт')),
                ('name', models.CharField(default='Trainer', max_length=50, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=50, verbose_name='Фамилия')),
                ('description', models.TextField(blank=True, verbose_name='О себе')),
                ('age', models.PositiveSmallIntegerField(default=20, verbose_name='Возраст')),
                ('verification', models.BooleanField(default=False, verbose_name='Верификация')),
                ('specialization', models.CharField(choices=[('FT', 'Фитнес'), ('BB', 'Бодибилдинг'), ('WO', 'Воркаут'), ('CF', 'Кроссфит'), ('PL', 'Пауэрлифтинг'), ('PT', 'Лечебная физкультура')], default='MG', max_length=2, verbose_name='Специализация')),
                ('clients', models.ManyToManyField(blank=True, to='accounts.Sportsman', verbose_name='Клиенты')),
                ('gym', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Gym', verbose_name='Тренажерный зал')),
            ],
            options={
                'verbose_name': 'Тренер',
                'verbose_name_plural': 'Тренера',
            },
        ),
    ]
